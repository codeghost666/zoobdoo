<?php
namespace Erp\UserBundle\Repository;

use Erp\UserBundle\Entity\User;

/**
 * UserDocumentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserDocumentRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Return user documents for user
     *
     * @param User $user
     * @param User $toUser
     *
     * @return array
     */
    public function getUserDocuments(User $user, User $toUser)
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('m')
            ->from($this->_entityName, 'm')
            ->addOrderBy('m.createdDate', 'DESC');

        if ($toUser->hasRole(User::ROLE_ANONYMOUS)) {
            $qb->where('m.fromUser IS NULL')
                ->andWhere('m.toUser = :toUser')
                ->setParameter('toUser', $user);
        } else {
            $qb->where('m.fromUser IN (:toUsers)')
                ->andWhere('m.toUser IN (:fromUsers)')
                ->setParameter('fromUsers', [$user, $toUser])
                ->setParameter('toUsers', [$user, $toUser]);
        }

        $result = $qb->getQuery()->getResult();

        return $result;
    }

    /**
     * Return count documents for user
     *
     * @param User $fromUser
     * @param User $toUser
     *
     * @return int
     */
    public function getTotalUserDocumentsByToUser(User $fromUser, User $toUser)
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('COUNT(m)')
            ->from($this->_entityName, 'm');

        if ($toUser->hasRole(User::ROLE_ANONYMOUS)) {
            $qb->where('m.fromUser IS NULL')
                ->andWhere('m.toUser = :toUser')
                ->setParameter('toUser', $fromUser);
        } else {
            $qb->where('m.toUser IN (:users)')
                ->andWhere('m.fromUser IN (:users)')
                ->setParameter('users', [$fromUser, $toUser]);
        }

        $result = $qb->getQuery()->getSingleScalarResult();

        return $result;
    }
}
